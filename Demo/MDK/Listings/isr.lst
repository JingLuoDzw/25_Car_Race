C251 COMPILER V5.60.0,  isr                                                                17/07/25  14:21:47  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE isr
OBJECT MODULE PLACED IN .\Objects\isr.obj
COMPILER INVOKED BY: D:\APP\Rubbish\c251\C251\BIN\C251.EXE ..\USER\isr.c XSMALL INTR2 WARNINGLEVEL(3) BROWSE INCDIR(..\C
                    -ODE;..\USER;..\..\lib\zf_app;..\..\lib\zf_base;..\..\lib\zf_bsp) DEBUG PRINT(.\Listings\isr.lst) TABS(2) OBJECT(.\Object
                    -s\isr.obj) 

stmt  level    source

    1          #include "headfile.h"
    2          
    3          char TIM1_Flag = 0;
    4          char TIM4_Flag = 0;
    5          
    6          int T1_count=0;
    7          int T4_count=0;
    8          float L[5]={0},R[5]={0};
    9          int start_0 = 0;
   10          //UART1中断
   11          void UART1_Isr() interrupt 4
   12          {
   13   1          uint8 res;
   14   1        static uint8 dwon_count;
   15   1          if(UART1_GET_TX_FLAG)
   16   1          {
   17   2              UART1_CLEAR_TX_FLAG;
   18   2              busy[1] = 0;
   19   2          }
   20   1          if(UART1_GET_RX_FLAG)
   21   1          {
   22   2              UART1_CLEAR_RX_FLAG;
   23   2              res = SBUF;
   24   2              //程序自动下载
   25   2              if(res == 0x7F)
   26   2              {
   27   3                  if(dwon_count++ > 20)
   28   3                      IAP_CONTR = 0x60;
   29   3              }
   30   2              else
   31   2              {
   32   3                  dwon_count = 0;
   33   3              }
   34   2          }
   35   1      }
   36          
   37          //UART2中断
   38          void UART2_Isr() interrupt 8
   39          {
   40   1          if(UART2_GET_TX_FLAG)
   41   1        {
   42   2              UART2_CLEAR_TX_FLAG;
   43   2          busy[2] = 0;
   44   2        }
   45   1          if(UART2_GET_RX_FLAG)
   46   1        {
   47   2              UART2_CLEAR_RX_FLAG;
   48   2          //接收数据寄存器为：S2BUF
   49   2      
   50   2        }
   51   1      }
   52          
   53          
   54          //UART3中断
   55          void UART3_Isr() interrupt 17
   56          {
   57   1          if(UART3_GET_TX_FLAG)
C251 COMPILER V5.60.0,  isr                                                                17/07/25  14:21:47  PAGE 2   

   58   1        {
   59   2              UART3_CLEAR_TX_FLAG;
   60   2          busy[3] = 0;
   61   2        }
   62   1          if(UART3_GET_RX_FLAG)
   63   1        {
   64   2              UART3_CLEAR_RX_FLAG;
   65   2          //接收数据寄存器为：S3BUF
   66   2        }
   67   1      }
   68          
   69          
   70          //UART4中断
   71          void UART4_Isr() interrupt 18
   72          {
   73   1          if(UART4_GET_TX_FLAG)
   74   1        {
   75   2              UART4_CLEAR_TX_FLAG;
   76   2          busy[4] = 0;
   77   2        }
   78   1          if(UART4_GET_RX_FLAG)
   79   1        {
   80   2              UART4_CLEAR_RX_FLAG;
   81   2      
   82   2          //接收数据寄存器为：S4BUF;
   83   2          if(wireless_type == WIRELESS_SI24R1)
   84   2              {
   85   3                  wireless_uart_callback();           //无线转串口回调函数
   86   3              }
   87   2              else if(wireless_type == WIRELESS_CH9141)
   88   2              {
   89   3                  bluetooth_ch9141_uart_callback();   //蓝牙转串口回调函数
   90   3              }
   91   2              else if(wireless_type == WIRELESS_CH573)
   92   2              {
   93   3                  wireless_ch573_callback();          //CH573无线模块回调函数
   94   3              }
   95   2        }
   96   1      }
   97          
   98          #define LED P52
   99          void INT0_Isr() interrupt 0
  100          {
  101   1        LED = 0;  //点亮LED
  102   1      }
  103          void INT1_Isr() interrupt 2
  104          {
  105   1      
  106   1        
  107   1      
  108   1      }
  109          void INT2_Isr() interrupt 10
  110          {
  111   1        INT2_CLEAR_FLAG;  //清除中断标志
  112   1      }
  113          void INT3_Isr() interrupt 11
  114          {
  115   1        INT3_CLEAR_FLAG;  //清除中断标志
  116   1      }
  117          
  118          void INT4_Isr() interrupt 16
  119          {
  120   1        INT4_CLEAR_FLAG;  //清除中断标志
  121   1      }
  122          
  123          void TM0_Isr() interrupt 1
C251 COMPILER V5.60.0,  isr                                                                17/07/25  14:21:47  PAGE 3   

  124          {
  125   1      
  126   1      
  127   1      }
  128          
  129          int sum_menu_flag = 0;
  130          int menu_flag = 0;
  131          void TM1_Isr() interrupt 3
  132          {
  133   1      
  134   1        if(!TIM1_Flag)
  135   1        {
  136   2        TIM1_Flag=1;
  137   2        }
  138   1        
  139   1        if(menu_flag){
  140   2        if(!P71 && P71_Last){
  141   3      //    place_index_1 += 1;
  142   3      //    if(place_index_1 >= 20){
  143   3      //      place_index_1 = 0;
  144   3            place_index -= 1;
  145   3      //    }
  146   3        }
  147   2        else if(!P73 && P73_Last){
  148   3      //    place_index_2 += 1;
  149   3      //    if(place_index_2 >= 20){
  150   3      //      place_index_2 = 0;
  151   3            place_index += 1;
  152   3      //    }
  153   3        }
  154   2        else if(!P70){
  155   3      //    value_index_1 += 1;
  156   3      //    if(value_index_1 >= 20){
  157   3      //      value_index_1 = 0;
  158   3            value_index += 1;
  159   3      //    }
  160   3        }
  161   2        else if(!P72){
  162   3      //    value_index_2 += 1;
  163   3      //    if(value_index_2 >= 20){
  164   3      //      value_index_2 = 0;
  165   3            value_index -= 1;
  166   3      //    }
  167   3        }
  168   2        P71_Last = P71;
  169   2        P73_Last = P73;
  170   2      //  P70_Last = P70;
  171   2      //  P72_Last = P72;
  172   2        }
  173   1      }
  174          
  175          void TM2_Isr() interrupt 12
  176          {
  177   1        TIM2_CLEAR_FLAG;  //清除中断标志
  178   1        
  179   1      }
  180          void TM3_Isr() interrupt 19
  181          {
  182   1        TIM3_CLEAR_FLAG; //清除中断标志
  183   1        
  184   1      }
  185          
  186          void TM4_Isr() interrupt 20
  187          {
  188   1          if(start_0 == 1)
  189   1          {
C251 COMPILER V5.60.0,  isr                                                                17/07/25  14:21:47  PAGE 4   

  190   2          Speed_Loop();
  191   2          }
  192   1      //    error = error_get(adc_value, flag_turn);
  193   1      //    Dir_Loop(error, speed_goal, flag_turn);
  194   1      
  195   1          TIM4_CLEAR_FLAG;
  196   1      }
  197          
  198          
  199          //void  INT0_Isr()  interrupt 0;
  200          //void  TM0_Isr()   interrupt 1;
  201          //void  INT1_Isr()  interrupt 2;
  202          //void  TM1_Isr()   interrupt 3;
  203          //void  UART1_Isr() interrupt 4;
  204          //void  ADC_Isr()   interrupt 5;
  205          //void  LVD_Isr()   interrupt 6;
  206          //void  PCA_Isr()   interrupt 7;
  207          //void  UART2_Isr() interrupt 8;
  208          //void  SPI_Isr()   interrupt 9;
  209          //void  INT2_Isr()  interrupt 10;
  210          //void  INT3_Isr()  interrupt 11;
  211          //void  TM2_Isr()   interrupt 12;
  212          //void  INT4_Isr()  interrupt 16;
  213          //void  UART3_Isr() interrupt 17;
  214          //void  UART4_Isr() interrupt 18;
  215          //void  TM3_Isr()   interrupt 19;
  216          //void  TM4_Isr()   interrupt 20;
  217          //void  CMP_Isr()   interrupt 21;
  218          //void  I2C_Isr()   interrupt 24;
  219          //void  USB_Isr()   interrupt 25;
  220          //void  PWM1_Isr()  interrupt 26;
  221          //void  PWM2_Isr()  interrupt 27;


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       497     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        53     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        88     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
