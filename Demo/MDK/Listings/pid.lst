C251 COMPILER V5.60.0,  pid                                                                05/06/25  17:43:17  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE pid
OBJECT MODULE PLACED IN .\Objects\pid.obj
COMPILER INVOKED BY: D:\APP\Rubbish\c251\C251\BIN\C251.EXE ..\CODE\pid.c XSMALL INTR2 WARNINGLEVEL(3) BROWSE INCDIR(..\C
                    -ODE;..\USER;..\..\lib\zf_app;..\..\lib\zf_base;..\..\lib\zf_bsp) DEBUG PRINT(.\Listings\pid.lst) TABS(2) OBJECT(.\Object
                    -s\pid.obj) 

stmt  level    source

    1          #include "headfile.h"
    2          PID motor_L_pid = {0};
    3          PID motor_R_pid = {0};
    4          PID speed_ctrl_pid = {0};
    5          PID dir_loop_pid = {0};
    6          void pid_set(float *arr, PID *pid)
    7          {
    8   1          pid->KP = arr[0];
    9   1          pid->KI = arr[1];
   10   1          pid->KD = arr[2];
   11   1      }
   12          
   13          void InitPID(void)
   14          {
   15   1          motor_L_pid.SetValue        = 0.0;
   16   1          motor_L_pid.SetValueTmp     = 0.0;
   17   1          motor_L_pid.ActValue        = 0.0;
   18   1          motor_L_pid.KP              = 90;
   19   1          motor_L_pid.KI              = 15;
   20   1          motor_L_pid.KD              = 0;
   21   1          motor_L_pid.ek              = 0.0;
   22   1          motor_L_pid.ek_1            = 0.0;
   23   1          motor_L_pid.ek_2            = 0.0;
   24   1          motor_L_pid.ek_sum          = 0.0;
   25   1          motor_L_pid.PIDmax          = 800;
   26   1          motor_L_pid.PIDmin          = -800;
   27   1          motor_L_pid.PIDout          = 0;
   28   1      
   29   1          motor_R_pid.SetValue        = 0.0;
   30   1          motor_R_pid.ActValue        = 0.0;
   31   1          motor_R_pid.KP              = 90;
   32   1          motor_R_pid.KI              = 15;
   33   1          motor_R_pid.KD              = 0;
   34   1          motor_R_pid.ek              = 0.0;
   35   1          motor_R_pid.ek_1            = 0.0;
   36   1          motor_R_pid.ek_2            = 0.0;
   37   1          motor_R_pid.ek_sum          = 0.0;
   38   1          motor_R_pid.PIDmax          = motor_L_pid.PIDmax;
   39   1          motor_R_pid.PIDmin          = motor_L_pid.PIDmin;
   40   1          motor_R_pid.PIDout          = 0;
   41   1      
   42   1          dir_loop_pid.SetValue       = 0.00;       //以下根本用不着
   43   1          dir_loop_pid.ActValue       = 0.00;
   44   1          dir_loop_pid.KP             = 50;
   45   1          dir_loop_pid.KI             = 0;
   46   1          dir_loop_pid.KD             = 0;
   47   1          dir_loop_pid.ek             = 0.00;
   48   1          dir_loop_pid.ek_1           = 0.00;
   49   1          dir_loop_pid.ek_2           = 0.00;
   50   1          dir_loop_pid.ek_sum         = 0.00;
   51   1          dir_loop_pid.Sum_max        = 1.00;
   52   1          dir_loop_pid.Sum_min        = -1.00;
   53   1          dir_loop_pid.PIDmax         = 30.00;
   54   1          dir_loop_pid.PIDmin         = -30.00;
   55   1      
   56   1      //    dir_loop_pid.SetValue       = 0.00;
   57   1      //    dir_loop_pid.ActValue       = 0.00;
C251 COMPILER V5.60.0,  pid                                                                05/06/25  17:43:17  PAGE 2   

   58   1      //    dir_loop_pid.KP             = 240;
   59   1      //    dir_loop_pid.KI             = 0;
   60   1      //    dir_loop_pid.KD             = 400;
   61   1      //    dir_loop_pid.ek             = 0.00;
   62   1      //    dir_loop_pid.ek_1           = 0.00;
   63   1      //    dir_loop_pid.ek_2           = 0.00;
   64   1      //    dir_loop_pid.ek_sum         = 0.00;
   65   1      //    dir_loop_pid.Sum_max        = 1.00;
   66   1      //    dir_loop_pid.Sum_min        = -1.00;
   67   1      //    dir_loop_pid.PIDmax         = 30.00;
   68   1      //    dir_loop_pid.PIDmin         = -30.00;
   69   1      
   70   1      }
   71          //flag=1时，对pid输出进行限幅
   72          float PID_Control_Inc(PID *pid, int flag)
   73          {
   74   1          float inc;
   75   1      
   76   1          pid->ek = pid->SetValue - pid->ActValue;
   77   1      //  if(pid->SetValue!=0&& pid->ek<9)
   78   1      //  {
   79   1      //  return 0;
   80   1      //  }
   81   1          inc = pid->KP * (pid->ek - pid->ek_1) + pid->KI * pid->ek + pid->KD * (pid->ek - 2 * pid->ek_1 + pid-
             ->ek_2);
   82   1      
   83   1          pid->ek_2 = pid->ek_1;
   84   1          pid->ek_1 = pid->ek;
   85   1      
   86   1          if (flag == 1)
   87   1          {
   88   2              if (inc > pid->PIDmax)
   89   2                  inc = pid->PIDmax;
   90   2              if (inc < pid->PIDmin)
   91   2                  inc = pid->PIDmin;
   92   2          }
   93   1          pid->PIDout = inc;
   94   1          return inc;
   95   1      }
   96          
   97          //flag=1时，对pid输出进行限幅
   98          float PID_Control_Pos(PID *pid, int flag)
   99          {
  100   1          float Pos ;
  101   1      
  102   1          pid->ek = pid->SetValue - pid->ActValue;
  103   1          pid->ek_sum += pid->ek;
  104   1      
  105   1      
  106   1      
  107   1          Pos = pid->KP * pid->ek + pid->KI * pid->ek_sum + pid->KD * (pid->ek - pid->ek_1);
  108   1      
  109   1          pid->ek_2 = pid->ek_1;
  110   1          pid->ek_1 = pid->ek;
  111   1      
  112   1          if (flag == 1)
  113   1          {
  114   2              if (Pos > pid->PIDmax)
  115   2                  Pos = pid->PIDmax;
  116   2              if (Pos < pid->PIDmin)
  117   2                  Pos = pid->PIDmin;
  118   2          }
  119   1          pid->PIDout = Pos;
  120   1      
  121   1          return Pos;
  122   1      }
C251 COMPILER V5.60.0,  pid                                                                05/06/25  17:43:17  PAGE 3   



Module Information          Static   Overlayable
------------------------------------------------
  code size            =       701     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       240     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       256     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
